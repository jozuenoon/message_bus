// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import query "github.com/jozuenoon/message_bus/query"
import time "time"

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetEvents provides a mock function with given fields: ctx, detectors, after, before, limit
func (_m *Repository) GetEvents(ctx context.Context, detectors []string, after time.Time, before time.Time, limit int64) ([]*query.Event, error) {
	ret := _m.Called(ctx, detectors, after, before, limit)

	var r0 []*query.Event
	if rf, ok := ret.Get(0).(func(context.Context, []string, time.Time, time.Time, int64) []*query.Event); ok {
		r0 = rf(ctx, detectors, after, before, limit)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*query.Event)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, []string, time.Time, time.Time, int64) error); ok {
		r1 = rf(ctx, detectors, after, before, limit)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
