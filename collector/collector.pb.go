// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collector.proto

package collector

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DEVICE int32

const (
	DEVICE_DEVICE_UNKNOWN DEVICE = 0
	DEVICE_MOBILE         DEVICE = 1
	DEVICE_WIFI           DEVICE = 2
	DEVICE_BLUETOOTH      DEVICE = 3
)

var DEVICE_name = map[int32]string{
	0: "DEVICE_UNKNOWN",
	1: "MOBILE",
	2: "WIFI",
	3: "BLUETOOTH",
}

var DEVICE_value = map[string]int32{
	"DEVICE_UNKNOWN": 0,
	"MOBILE":         1,
	"WIFI":           2,
	"BLUETOOTH":      3,
}

func (x DEVICE) String() string {
	return proto.EnumName(DEVICE_name, int32(x))
}

func (DEVICE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{0}
}

type DetectorStatus struct {
	Loc                  *Coordinates    `protobuf:"bytes,1,opt,name=loc,proto3" json:"loc,omitempty"`
	ActiveDetectors      []DEVICE        `protobuf:"varint,2,rep,packed,name=active_detectors,json=activeDetectors,proto3,enum=collector.DEVICE" json:"active_detectors,omitempty"`
	BatteryVoltage       float64         `protobuf:"fixed64,3,opt,name=battery_voltage,json=batteryVoltage,proto3" json:"battery_voltage,omitempty"`
	DetectionCount       map[int32]int64 `protobuf:"bytes,4,rep,name=detection_count,json=detectionCount,proto3" json:"detection_count,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DetectorStatus) Reset()         { *m = DetectorStatus{} }
func (m *DetectorStatus) String() string { return proto.CompactTextString(m) }
func (*DetectorStatus) ProtoMessage()    {}
func (*DetectorStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{0}
}

func (m *DetectorStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorStatus.Unmarshal(m, b)
}
func (m *DetectorStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorStatus.Marshal(b, m, deterministic)
}
func (m *DetectorStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorStatus.Merge(m, src)
}
func (m *DetectorStatus) XXX_Size() int {
	return xxx_messageInfo_DetectorStatus.Size(m)
}
func (m *DetectorStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorStatus proto.InternalMessageInfo

func (m *DetectorStatus) GetLoc() *Coordinates {
	if m != nil {
		return m.Loc
	}
	return nil
}

func (m *DetectorStatus) GetActiveDetectors() []DEVICE {
	if m != nil {
		return m.ActiveDetectors
	}
	return nil
}

func (m *DetectorStatus) GetBatteryVoltage() float64 {
	if m != nil {
		return m.BatteryVoltage
	}
	return 0
}

func (m *DetectorStatus) GetDetectionCount() map[int32]int64 {
	if m != nil {
		return m.DetectionCount
	}
	return nil
}

type DetectionEvent struct {
	Time []*timestamp.Timestamp `protobuf:"bytes,1,rep,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to DeviceId:
	//	*DetectionEvent_Wifi
	//	*DetectionEvent_Bluetooth
	//	*DetectionEvent_Mobile
	DeviceId             isDetectionEvent_DeviceId `protobuf_oneof:"device_id"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DetectionEvent) Reset()         { *m = DetectionEvent{} }
func (m *DetectionEvent) String() string { return proto.CompactTextString(m) }
func (*DetectionEvent) ProtoMessage()    {}
func (*DetectionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{1}
}

func (m *DetectionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectionEvent.Unmarshal(m, b)
}
func (m *DetectionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectionEvent.Marshal(b, m, deterministic)
}
func (m *DetectionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectionEvent.Merge(m, src)
}
func (m *DetectionEvent) XXX_Size() int {
	return xxx_messageInfo_DetectionEvent.Size(m)
}
func (m *DetectionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DetectionEvent proto.InternalMessageInfo

func (m *DetectionEvent) GetTime() []*timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type isDetectionEvent_DeviceId interface {
	isDetectionEvent_DeviceId()
}

type DetectionEvent_Wifi struct {
	Wifi string `protobuf:"bytes,2,opt,name=wifi,proto3,oneof"`
}

type DetectionEvent_Bluetooth struct {
	Bluetooth string `protobuf:"bytes,3,opt,name=bluetooth,proto3,oneof"`
}

type DetectionEvent_Mobile struct {
	Mobile string `protobuf:"bytes,4,opt,name=mobile,proto3,oneof"`
}

func (*DetectionEvent_Wifi) isDetectionEvent_DeviceId() {}

func (*DetectionEvent_Bluetooth) isDetectionEvent_DeviceId() {}

func (*DetectionEvent_Mobile) isDetectionEvent_DeviceId() {}

func (m *DetectionEvent) GetDeviceId() isDetectionEvent_DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DetectionEvent) GetWifi() string {
	if x, ok := m.GetDeviceId().(*DetectionEvent_Wifi); ok {
		return x.Wifi
	}
	return ""
}

func (m *DetectionEvent) GetBluetooth() string {
	if x, ok := m.GetDeviceId().(*DetectionEvent_Bluetooth); ok {
		return x.Bluetooth
	}
	return ""
}

func (m *DetectionEvent) GetMobile() string {
	if x, ok := m.GetDeviceId().(*DetectionEvent_Mobile); ok {
		return x.Mobile
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DetectionEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DetectionEvent_Wifi)(nil),
		(*DetectionEvent_Bluetooth)(nil),
		(*DetectionEvent_Mobile)(nil),
	}
}

type Coordinates struct {
	DetectorId string `protobuf:"bytes,1,opt,name=detector_id,json=detectorId,proto3" json:"detector_id,omitempty"`
	// Since decimal is not supported. We use int64 scaled values with fixed 5 decimal places.
	// This means that 1 is equivalent to 0.00001 decimal degrees so ground precision is around 1.1132 m
	Latitude             int64    `protobuf:"varint,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            int64    `protobuf:"varint,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coordinates) Reset()         { *m = Coordinates{} }
func (m *Coordinates) String() string { return proto.CompactTextString(m) }
func (*Coordinates) ProtoMessage()    {}
func (*Coordinates) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{2}
}

func (m *Coordinates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coordinates.Unmarshal(m, b)
}
func (m *Coordinates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coordinates.Marshal(b, m, deterministic)
}
func (m *Coordinates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coordinates.Merge(m, src)
}
func (m *Coordinates) XXX_Size() int {
	return xxx_messageInfo_Coordinates.Size(m)
}
func (m *Coordinates) XXX_DiscardUnknown() {
	xxx_messageInfo_Coordinates.DiscardUnknown(m)
}

var xxx_messageInfo_Coordinates proto.InternalMessageInfo

func (m *Coordinates) GetDetectorId() string {
	if m != nil {
		return m.DetectorId
	}
	return ""
}

func (m *Coordinates) GetLatitude() int64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Coordinates) GetLongitude() int64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type EventLog struct {
	Loc                  *Coordinates      `protobuf:"bytes,1,opt,name=loc,proto3" json:"loc,omitempty"`
	Events               []*DetectionEvent `protobuf:"bytes,20,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EventLog) Reset()         { *m = EventLog{} }
func (m *EventLog) String() string { return proto.CompactTextString(m) }
func (*EventLog) ProtoMessage()    {}
func (*EventLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{3}
}

func (m *EventLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLog.Unmarshal(m, b)
}
func (m *EventLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLog.Marshal(b, m, deterministic)
}
func (m *EventLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLog.Merge(m, src)
}
func (m *EventLog) XXX_Size() int {
	return xxx_messageInfo_EventLog.Size(m)
}
func (m *EventLog) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLog.DiscardUnknown(m)
}

var xxx_messageInfo_EventLog proto.InternalMessageInfo

func (m *EventLog) GetLoc() *Coordinates {
	if m != nil {
		return m.Loc
	}
	return nil
}

func (m *EventLog) GetEvents() []*DetectionEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type SendStreamResponse struct {
	Mobile               int64    `protobuf:"varint,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Bluetooth            int64    `protobuf:"varint,3,opt,name=bluetooth,proto3" json:"bluetooth,omitempty"`
	Wifi                 int64    `protobuf:"varint,4,opt,name=wifi,proto3" json:"wifi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStreamResponse) Reset()         { *m = SendStreamResponse{} }
func (m *SendStreamResponse) String() string { return proto.CompactTextString(m) }
func (*SendStreamResponse) ProtoMessage()    {}
func (*SendStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{4}
}

func (m *SendStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStreamResponse.Unmarshal(m, b)
}
func (m *SendStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStreamResponse.Marshal(b, m, deterministic)
}
func (m *SendStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStreamResponse.Merge(m, src)
}
func (m *SendStreamResponse) XXX_Size() int {
	return xxx_messageInfo_SendStreamResponse.Size(m)
}
func (m *SendStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendStreamResponse proto.InternalMessageInfo

func (m *SendStreamResponse) GetMobile() int64 {
	if m != nil {
		return m.Mobile
	}
	return 0
}

func (m *SendStreamResponse) GetBluetooth() int64 {
	if m != nil {
		return m.Bluetooth
	}
	return 0
}

func (m *SendStreamResponse) GetWifi() int64 {
	if m != nil {
		return m.Wifi
	}
	return 0
}

type DetectorLink struct {
	DestDetectorId       string                         `protobuf:"bytes,1,opt,name=dest_detector_id,json=destDetectorId,proto3" json:"dest_detector_id,omitempty"`
	SrcDetectors         []*DetectorLink_SourceDetector `protobuf:"bytes,2,rep,name=src_detectors,json=srcDetectors,proto3" json:"src_detectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DetectorLink) Reset()         { *m = DetectorLink{} }
func (m *DetectorLink) String() string { return proto.CompactTextString(m) }
func (*DetectorLink) ProtoMessage()    {}
func (*DetectorLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{5}
}

func (m *DetectorLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorLink.Unmarshal(m, b)
}
func (m *DetectorLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorLink.Marshal(b, m, deterministic)
}
func (m *DetectorLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorLink.Merge(m, src)
}
func (m *DetectorLink) XXX_Size() int {
	return xxx_messageInfo_DetectorLink.Size(m)
}
func (m *DetectorLink) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorLink.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorLink proto.InternalMessageInfo

func (m *DetectorLink) GetDestDetectorId() string {
	if m != nil {
		return m.DestDetectorId
	}
	return ""
}

func (m *DetectorLink) GetSrcDetectors() []*DetectorLink_SourceDetector {
	if m != nil {
		return m.SrcDetectors
	}
	return nil
}

type DetectorLink_SourceDetector struct {
	DetectorId string `protobuf:"bytes,1,opt,name=detector_id,json=detectorId,proto3" json:"detector_id,omitempty"`
	// Maximum travel time from source detector to destination detector that is considered possible.
	MaxSeconds           int64    `protobuf:"varint,2,opt,name=max_seconds,json=maxSeconds,proto3" json:"max_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectorLink_SourceDetector) Reset()         { *m = DetectorLink_SourceDetector{} }
func (m *DetectorLink_SourceDetector) String() string { return proto.CompactTextString(m) }
func (*DetectorLink_SourceDetector) ProtoMessage()    {}
func (*DetectorLink_SourceDetector) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{5, 0}
}

func (m *DetectorLink_SourceDetector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorLink_SourceDetector.Unmarshal(m, b)
}
func (m *DetectorLink_SourceDetector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorLink_SourceDetector.Marshal(b, m, deterministic)
}
func (m *DetectorLink_SourceDetector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorLink_SourceDetector.Merge(m, src)
}
func (m *DetectorLink_SourceDetector) XXX_Size() int {
	return xxx_messageInfo_DetectorLink_SourceDetector.Size(m)
}
func (m *DetectorLink_SourceDetector) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorLink_SourceDetector.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorLink_SourceDetector proto.InternalMessageInfo

func (m *DetectorLink_SourceDetector) GetDetectorId() string {
	if m != nil {
		return m.DetectorId
	}
	return ""
}

func (m *DetectorLink_SourceDetector) GetMaxSeconds() int64 {
	if m != nil {
		return m.MaxSeconds
	}
	return 0
}

func init() {
	proto.RegisterEnum("collector.DEVICE", DEVICE_name, DEVICE_value)
	proto.RegisterType((*DetectorStatus)(nil), "collector.DetectorStatus")
	proto.RegisterMapType((map[int32]int64)(nil), "collector.DetectorStatus.DetectionCountEntry")
	proto.RegisterType((*DetectionEvent)(nil), "collector.DetectionEvent")
	proto.RegisterType((*Coordinates)(nil), "collector.Coordinates")
	proto.RegisterType((*EventLog)(nil), "collector.EventLog")
	proto.RegisterType((*SendStreamResponse)(nil), "collector.SendStreamResponse")
	proto.RegisterType((*DetectorLink)(nil), "collector.DetectorLink")
	proto.RegisterType((*DetectorLink_SourceDetector)(nil), "collector.DetectorLink.SourceDetector")
}

func init() { proto.RegisterFile("collector.proto", fileDescriptor_9305884a292fdf82) }

var fileDescriptor_9305884a292fdf82 = []byte{
	// 709 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0x8e, 0x31, 0x41, 0x61, 0x48, 0x8c, 0xb3, 0x41, 0x39, 0x0e, 0xe7, 0x9c, 0x06, 0x71, 0xd1,
	0x5a, 0x95, 0xea, 0xa8, 0xf4, 0xa6, 0xaa, 0xda, 0x8b, 0x84, 0x38, 0x0a, 0x0a, 0x0d, 0x92, 0xc9,
	0xcf, 0x5d, 0x2d, 0x63, 0x6f, 0xc8, 0x2a, 0xb6, 0x17, 0xd9, 0x6b, 0x1a, 0x1e, 0xa6, 0x6f, 0xd2,
	0x17, 0xe9, 0x5b, 0xf4, 0x11, 0x2a, 0xef, 0xda, 0x60, 0x42, 0x68, 0xd5, 0xbb, 0x9d, 0x6f, 0x66,
	0x67, 0x67, 0xbe, 0xf9, 0x66, 0xa1, 0xee, 0x52, 0xdf, 0xc7, 0x2e, 0xa3, 0x91, 0x31, 0x89, 0x28,
	0xa3, 0xa8, 0x3a, 0x07, 0x9a, 0x87, 0x63, 0x4a, 0xc7, 0x3e, 0x3e, 0xe2, 0x8e, 0x51, 0x72, 0x77,
	0xc4, 0x48, 0x80, 0x63, 0xe6, 0x04, 0x13, 0x11, 0xdb, 0xfc, 0xf7, 0x69, 0x00, 0x0e, 0x26, 0x6c,
	0x26, 0x9c, 0xed, 0xef, 0x25, 0x50, 0x4e, 0x31, 0xe3, 0xa9, 0x86, 0xcc, 0x61, 0x49, 0x8c, 0x74,
	0x90, 0x7d, 0xea, 0x6a, 0x52, 0x4b, 0xd2, 0x6b, 0x9d, 0x7d, 0x63, 0xf1, 0x74, 0x97, 0xd2, 0xc8,
	0x23, 0xa1, 0xc3, 0x70, 0x6c, 0xa5, 0x21, 0xe8, 0x23, 0xa8, 0x8e, 0xcb, 0xc8, 0x14, 0xdb, 0x5e,
	0x96, 0x22, 0xd6, 0x4a, 0x2d, 0x59, 0x57, 0x3a, 0xbb, 0x85, 0x6b, 0xa7, 0xe6, 0x4d, 0xaf, 0x6b,
	0x5a, 0x75, 0x11, 0x9a, 0x3f, 0x16, 0xa3, 0x57, 0x50, 0x1f, 0x39, 0x8c, 0xe1, 0x68, 0x66, 0x4f,
	0xa9, 0xcf, 0x9c, 0x31, 0xd6, 0xe4, 0x96, 0xa4, 0x4b, 0x96, 0x92, 0xc1, 0x37, 0x02, 0x45, 0x37,
	0x50, 0x17, 0xf9, 0x09, 0x0d, 0x6d, 0x97, 0x26, 0x21, 0xd3, 0xca, 0x2d, 0x59, 0xaf, 0x75, 0xde,
	0x14, 0x5f, 0x59, 0x6a, 0x22, 0x33, 0x09, 0x0d, 0xbb, 0x69, 0xbc, 0x19, 0xb2, 0x68, 0x66, 0x29,
	0xde, 0x12, 0xd8, 0x3c, 0x86, 0xbd, 0x67, 0xc2, 0x90, 0x0a, 0xf2, 0x03, 0x9e, 0xf1, 0xfe, 0x37,
	0xad, 0xf4, 0x88, 0x1a, 0xb0, 0x39, 0x75, 0xfc, 0x04, 0x6b, 0xa5, 0x96, 0xa4, 0xcb, 0x96, 0x30,
	0x3e, 0x94, 0xde, 0x4b, 0xed, 0x6f, 0x52, 0x4e, 0x1f, 0xa1, 0xa1, 0x39, 0xc5, 0x21, 0x43, 0x06,
	0x94, 0xd3, 0x09, 0x68, 0x12, 0x2f, 0xb1, 0x69, 0x08, 0xf6, 0x8d, 0x9c, 0x7d, 0xe3, 0x2a, 0x1f,
	0x8f, 0xc5, 0xe3, 0x50, 0x03, 0xca, 0x5f, 0xc9, 0x1d, 0xe1, 0xb9, 0xab, 0xe7, 0x1b, 0x16, 0xb7,
	0xd0, 0x0b, 0xa8, 0x8e, 0xfc, 0x04, 0x33, 0x4a, 0xd9, 0x3d, 0xa7, 0x25, 0x75, 0x2d, 0x20, 0xa4,
	0x41, 0x25, 0xa0, 0x23, 0xe2, 0x63, 0xad, 0x9c, 0x39, 0x33, 0xfb, 0xa4, 0x06, 0x55, 0x0f, 0x4f,
	0x89, 0x8b, 0x6d, 0xe2, 0xb5, 0xef, 0xa1, 0x56, 0x98, 0x1a, 0x3a, 0x84, 0x5a, 0x3e, 0x29, 0x9b,
	0x78, 0xbc, 0xc5, 0xaa, 0x05, 0x39, 0xd4, 0xf3, 0x50, 0x13, 0xb6, 0x7c, 0x87, 0x11, 0x96, 0x78,
	0x79, 0xb3, 0x73, 0x1b, 0xfd, 0x07, 0x55, 0x9f, 0x86, 0x63, 0xe1, 0x94, 0xb9, 0x73, 0x01, 0xb4,
	0xc7, 0xb0, 0xc5, 0xfb, 0xef, 0xd3, 0xf1, 0x5f, 0x28, 0xe8, 0x2d, 0x54, 0x70, 0x7a, 0x2b, 0xd6,
	0x1a, 0x9c, 0xae, 0x83, 0x95, 0x89, 0xe6, 0xbc, 0x5a, 0x59, 0x60, 0xfb, 0x0b, 0xa0, 0x21, 0x0e,
	0xbd, 0x21, 0x8b, 0xb0, 0x13, 0x58, 0x38, 0x9e, 0xd0, 0x30, 0xc6, 0x68, 0x7f, 0xce, 0x87, 0x28,
	0x3b, 0xb3, 0xd2, 0xa2, 0x97, 0x79, 0x94, 0x8b, 0x2c, 0xa2, 0x8c, 0xfb, 0x32, 0x77, 0xf0, 0x73,
	0xfb, 0x87, 0x04, 0xdb, 0xb9, 0x98, 0xfa, 0x24, 0x7c, 0x40, 0x3a, 0xa8, 0x1e, 0x8e, 0x99, 0xbd,
	0xca, 0x9c, 0x92, 0xe2, 0xa7, 0x0b, 0xf6, 0x2e, 0x60, 0x27, 0x8e, 0xdc, 0x27, 0xcb, 0x50, 0xeb,
	0xbc, 0x7c, 0x46, 0xa6, 0x69, 0x66, 0x63, 0x48, 0x93, 0xc8, 0x9d, 0x6f, 0x84, 0xb5, 0x1d, 0x47,
	0xee, 0x7c, 0x3d, 0x9a, 0x16, 0x28, 0xcb, 0xfe, 0x3f, 0x4f, 0xef, 0x10, 0x6a, 0x81, 0xf3, 0x68,
	0xc7, 0xd8, 0xa5, 0xa1, 0x17, 0x67, 0x4c, 0x40, 0xe0, 0x3c, 0x0e, 0x05, 0xf2, 0xfa, 0x18, 0x2a,
	0x62, 0x1b, 0x11, 0x02, 0x45, 0x9c, 0xec, 0xeb, 0xcb, 0x8b, 0xcb, 0xc1, 0xed, 0xa5, 0xba, 0x81,
	0x00, 0x2a, 0x9f, 0x07, 0x27, 0xbd, 0xbe, 0xa9, 0x4a, 0x68, 0x0b, 0xca, 0xb7, 0xbd, 0xb3, 0x9e,
	0x5a, 0x42, 0x3b, 0x50, 0x3d, 0xe9, 0x5f, 0x9b, 0x57, 0x83, 0xc1, 0xd5, 0xb9, 0x2a, 0x77, 0x7e,
	0x96, 0x40, 0xed, 0xe6, 0xed, 0x0c, 0x71, 0x94, 0x2a, 0x0d, 0x7d, 0x02, 0xa5, 0x1b, 0x61, 0x87,
	0xe1, 0xb9, 0x04, 0xf6, 0x0a, 0x3d, 0xe7, 0x60, 0x73, 0x7f, 0x65, 0x19, 0xcc, 0xf4, 0x2b, 0x42,
	0x26, 0x20, 0x71, 0x7d, 0x89, 0xf7, 0x7f, 0xd6, 0xd0, 0xb6, 0x36, 0xcd, 0x19, 0x28, 0x42, 0x15,
	0xbf, 0xaf, 0xe2, 0xff, 0x02, 0xb8, 0xaa, 0x24, 0x5d, 0x42, 0x5d, 0xd8, 0x15, 0xe5, 0x14, 0x57,
	0x67, 0x8d, 0x8c, 0xd7, 0x16, 0xd3, 0x83, 0xc6, 0x72, 0x4f, 0xd9, 0xef, 0x7a, 0xb0, 0xf6, 0xcf,
	0x5a, 0x97, 0x6a, 0x54, 0xe1, 0xf6, 0xbb, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x8e, 0x98,
	0xf2, 0x06, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CollectorServiceClient is the client API for CollectorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectorServiceClient interface {
	CreateEventLog(ctx context.Context, in *EventLog, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateDetectorLink(ctx context.Context, in *DetectorLink, opts ...grpc.CallOption) (*empty.Empty, error)
	// NOTICE: not implemented
	StreamEventLog(ctx context.Context, opts ...grpc.CallOption) (CollectorService_StreamEventLogClient, error)
	CreateCoordinates(ctx context.Context, in *Coordinates, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateDetectorStatus(ctx context.Context, in *DetectorStatus, opts ...grpc.CallOption) (*empty.Empty, error)
}

type collectorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCollectorServiceClient(cc *grpc.ClientConn) CollectorServiceClient {
	return &collectorServiceClient{cc}
}

func (c *collectorServiceClient) CreateEventLog(ctx context.Context, in *EventLog, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/collector.CollectorService/CreateEventLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorServiceClient) CreateDetectorLink(ctx context.Context, in *DetectorLink, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/collector.CollectorService/CreateDetectorLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorServiceClient) StreamEventLog(ctx context.Context, opts ...grpc.CallOption) (CollectorService_StreamEventLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CollectorService_serviceDesc.Streams[0], "/collector.CollectorService/StreamEventLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &collectorServiceStreamEventLogClient{stream}
	return x, nil
}

type CollectorService_StreamEventLogClient interface {
	Send(*EventLog) error
	CloseAndRecv() (*SendStreamResponse, error)
	grpc.ClientStream
}

type collectorServiceStreamEventLogClient struct {
	grpc.ClientStream
}

func (x *collectorServiceStreamEventLogClient) Send(m *EventLog) error {
	return x.ClientStream.SendMsg(m)
}

func (x *collectorServiceStreamEventLogClient) CloseAndRecv() (*SendStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *collectorServiceClient) CreateCoordinates(ctx context.Context, in *Coordinates, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/collector.CollectorService/CreateCoordinates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorServiceClient) CreateDetectorStatus(ctx context.Context, in *DetectorStatus, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/collector.CollectorService/CreateDetectorStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectorServiceServer is the server API for CollectorService service.
type CollectorServiceServer interface {
	CreateEventLog(context.Context, *EventLog) (*empty.Empty, error)
	CreateDetectorLink(context.Context, *DetectorLink) (*empty.Empty, error)
	// NOTICE: not implemented
	StreamEventLog(CollectorService_StreamEventLogServer) error
	CreateCoordinates(context.Context, *Coordinates) (*empty.Empty, error)
	CreateDetectorStatus(context.Context, *DetectorStatus) (*empty.Empty, error)
}

// UnimplementedCollectorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollectorServiceServer struct {
}

func (*UnimplementedCollectorServiceServer) CreateEventLog(ctx context.Context, req *EventLog) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEventLog not implemented")
}
func (*UnimplementedCollectorServiceServer) CreateDetectorLink(ctx context.Context, req *DetectorLink) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDetectorLink not implemented")
}
func (*UnimplementedCollectorServiceServer) StreamEventLog(srv CollectorService_StreamEventLogServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamEventLog not implemented")
}
func (*UnimplementedCollectorServiceServer) CreateCoordinates(ctx context.Context, req *Coordinates) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCoordinates not implemented")
}
func (*UnimplementedCollectorServiceServer) CreateDetectorStatus(ctx context.Context, req *DetectorStatus) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDetectorStatus not implemented")
}

func RegisterCollectorServiceServer(s *grpc.Server, srv CollectorServiceServer) {
	s.RegisterService(&_CollectorService_serviceDesc, srv)
}

func _CollectorService_CreateEventLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServiceServer).CreateEventLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collector.CollectorService/CreateEventLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServiceServer).CreateEventLog(ctx, req.(*EventLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectorService_CreateDetectorLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetectorLink)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServiceServer).CreateDetectorLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collector.CollectorService/CreateDetectorLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServiceServer).CreateDetectorLink(ctx, req.(*DetectorLink))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectorService_StreamEventLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CollectorServiceServer).StreamEventLog(&collectorServiceStreamEventLogServer{stream})
}

type CollectorService_StreamEventLogServer interface {
	SendAndClose(*SendStreamResponse) error
	Recv() (*EventLog, error)
	grpc.ServerStream
}

type collectorServiceStreamEventLogServer struct {
	grpc.ServerStream
}

func (x *collectorServiceStreamEventLogServer) SendAndClose(m *SendStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *collectorServiceStreamEventLogServer) Recv() (*EventLog, error) {
	m := new(EventLog)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CollectorService_CreateCoordinates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coordinates)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServiceServer).CreateCoordinates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collector.CollectorService/CreateCoordinates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServiceServer).CreateCoordinates(ctx, req.(*Coordinates))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectorService_CreateDetectorStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetectorStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServiceServer).CreateDetectorStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collector.CollectorService/CreateDetectorStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServiceServer).CreateDetectorStatus(ctx, req.(*DetectorStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollectorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "collector.CollectorService",
	HandlerType: (*CollectorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEventLog",
			Handler:    _CollectorService_CreateEventLog_Handler,
		},
		{
			MethodName: "CreateDetectorLink",
			Handler:    _CollectorService_CreateDetectorLink_Handler,
		},
		{
			MethodName: "CreateCoordinates",
			Handler:    _CollectorService_CreateCoordinates_Handler,
		},
		{
			MethodName: "CreateDetectorStatus",
			Handler:    _CollectorService_CreateDetectorStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamEventLog",
			Handler:       _CollectorService_StreamEventLog_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "collector.proto",
}
